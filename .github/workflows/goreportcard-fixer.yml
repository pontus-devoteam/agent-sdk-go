name: Go Report Card Fixer

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  fix-issues:
    name: Fix Go Report Card Issues
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This gives permission to push to the repository
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the default token for checkout

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Fix Go module setup
        run: |
          if [ -f go.mod ]; then
            mv go.mod go.mod.bak
          fi
          go mod init github.com/pontus-devoteam/agent-sdk-go
          echo "replace github.com/pontus-devoteam/agent-sdk-go => ./" >> go.mod
          go mod tidy

      - name: Install Go Report Card tools
        run: |
          # Define Go binary path
          GOBIN=$(go env GOPATH)/bin
          echo "GOBIN=${GOBIN}" >> $GITHUB_ENV
          
          # Install tools
          go install golang.org/x/lint/golint@latest
          go install github.com/client9/misspell/cmd/misspell@latest
          go install github.com/kisielk/errcheck@latest
          go install github.com/gordonklaus/ineffassign@latest
          go install github.com/mdempsky/unconvert@latest
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
          go install honnef.co/go/tools/cmd/staticcheck@latest
          
          # Verify installations
          echo "Installed tools:"
          ls -la $GOBIN

      - name: Fix formatting issues
        run: |
          # Run gofmt
          echo "Running gofmt..."
          find . -type f -name "*.go" | xargs gofmt -s -w
          # Fix misspellings
          echo "Fixing misspellings..."
          ${{ env.GOBIN }}/misspell -w $(find . -type f -name "*.go" -o -name "*.md")
          echo "Formatting completed"

      - name: Run linters
        continue-on-error: true
        run: |
          # Use golangci-lint as a comprehensive linter
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ${{ env.GOBIN }} v1.55.2
          ${{ env.GOBIN }}/golangci-lint run --fix
          
          # Run additional specific checks
          echo "Running ineffassign..."
          ${{ env.GOBIN }}/ineffassign ./... || echo "Ineffectual assignments found"
          
          echo "Running errcheck..."
          ${{ env.GOBIN }}/errcheck ./... || echo "Unchecked errors found"
          
          echo "Running golint..."
          ${{ env.GOBIN }}/golint -set_exit_status $(go list ./...) || echo "Lint issues found"
          
          echo "Running staticcheck..."
          ${{ env.GOBIN }}/staticcheck ./... || echo "Static check issues found"
          
          echo "Checking cyclomatic complexity..."
          ${{ env.GOBIN }}/gocyclo -over 15 . || echo "Complex functions found"
          
          echo "Checking for unconverted types..."
          ${{ env.GOBIN }}/unconvert ./... || echo "Unconverted types found"
          
          echo "All linters completed"

      - name: Check if changes were made
        id: git-check
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.git-check.outputs.changes == 'true' && github.event_name != 'pull_request'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Fix Go Report Card issues [skip ci]" -m "Automatically fixed by GitHub Actions workflow"

      - name: Push changes
        if: steps.git-check.outputs.changes == 'true' && github.event_name != 'pull_request'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          branch: ${{ github.ref }}
          
      - name: Create PR with fixes
        if: steps.git-check.outputs.changes == 'true' && github.event_name == 'pull_request'
        run: |
          echo "Changes were made to fix Go Report Card issues."
          echo "Please commit these changes to your PR." 